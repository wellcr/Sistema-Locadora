package br.com.foursys.locadora.backingbean;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.faces.event.ValueChangeEvent;
import javax.faces.model.SelectItem;

import br.com.foursys.locadora.bean.Cliente;
import br.com.foursys.locadora.bean.Filme;
import br.com.foursys.locadora.bean.Locacao;
import br.com.foursys.locadora.controller.FilmeController;
import br.com.foursys.locadora.controller.LocacaoController;
import br.com.foursys.locadora.util.JSFUtil;

public class LocacaoBacking {
	
	private int codigo;
	private String nomeCliente;
	private String nomeFilme;
	private String valorFilme;
	private String data;
	private Filme filme;
	private List<String> itensFilme;
	private List<Filme> listaFilme;
	private List<Cliente> listaCliente;
	private List<Filme> listaFilmesAlugados = new ArrayList<Filme>();
	
	private String comboCliente;
	private String comboFilme;

	private ArrayList filmes;
	
	public int getCodigo() {
		return codigo;
	}

	public void setCodigo(int codigo) {
		this.codigo = codigo;
	}

	public String getNomeCliente() {
		return nomeCliente;
	}

	public void setNomeCliente(String nomeCliente) {
		this.nomeCliente = nomeCliente;
	}

	public String getNomeFilme() {
		return nomeFilme;
	}

	public void setNomeFilme(String nomeFilme) {
		this.nomeFilme = nomeFilme;
	}

	public String getValorFilme() {
		return valorFilme;
	}

	public void setValorFilme(String valorFilme) {
		this.valorFilme = valorFilme;
	}

	public String getData() {
		return data;
	}

	public void setData(String data) {
		this.data = data;
	}

	public List<String> getItensFilme() {
		return itensFilme;
	}

	public void setItensFilme(List<String> itensFilme) {
		this.itensFilme = itensFilme;
	}
	


	public String efetuarLocacao() {
		
		return "";
	}
	
	public String efetuarDevolucao() {
		
		return "";
	}
	
	public List<Filme> getListaFilme() {
		return listaFilme;
	}

	public void setListaFilme(List<Filme> listaFilme) {
		this.listaFilme = listaFilme;
	}

	public List<Cliente> getListaCliente() {
		return listaCliente;
	}

	public void setListaCliente(List<Cliente> listaCliente) {
		this.listaCliente = listaCliente;
	}


	public String cancelar() {
		limparDados();
		return "";
	}
	
	public void limparDados() {
		nomeCliente = "";
		nomeFilme = "";
		valorFilme = "";
		
	}
	
	public String sair() {
		return "sair";
	}
	
	public void popularCliente(ValueChangeEvent e) {
		nomeCliente = e.getNewValue().toString();
	}
	
	public void popularFilme(ValueChangeEvent e) {
		String auxIndice = e.getNewValue().toString();
		List<Filme> listaF = FilmeBacking.listaFilmeDisponivel;
		filme = listaF.get(Integer.parseInt(auxIndice)-1);

		this.nomeFilme = filme.getNome();
		if(filme.getPromocao().equals("SIM")) {
			this.valorFilme = filme.getValorPromocao()+""; 
		} else {
			this.valorFilme = filme.getValor()+"";
		}
	}
	
	
	public void selecionarFilme(ValueChangeEvent e) {
		String auxIndice = e.getNewValue().toString();
		List<Filme> listaF = listaFilmesAlugados;
		filme = listaF.get(Integer.parseInt(auxIndice)-1);
	}
	
	
	public String devolucao() {
		//if(validarDados()) {
		filme.setDisponivel("SIM");
		FilmeController controller = new FilmeController();
		
		controller.salvar(filme);
		JSFUtil.addInfoMessage("Devolução salva com sucesso!");
		//}
		return "";
	}
	
	public String salvar() {
		Locacao locacao = new Locacao();
		//if(validarDados()) {
		locacao.setNomeFilme(nomeFilme);
		locacao.setNomeCliente(nomeCliente);
		locacao.setValorFilme(Double.parseDouble(valorFilme));
		data = pegarData();
		locacao.setData(data);
			LocacaoController controller = new LocacaoController();	
			try {
				controller.salvar(locacao);
				mudarDisponivel();
				limparDados();
				JSFUtil.addInfoMessage("Locação salva com sucesso!");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				JSFUtil.addInfoMessage("Erro ao inserir Locação!");
			}
		//}
		return "";
	}
	
	public void mudarDisponivel() {
		filme.setDisponivel("NÃO");
		FilmeController controller = new FilmeController();
		
		controller.salvar(filme);
	}
	
	public String pegarData() {
		Calendar cal = Calendar.getInstance();
        int anoAtual = cal.get(Calendar.YEAR);
        int mesAtual = cal.get(Calendar.MONTH) + 1;
        int diaAtual = cal.get(Calendar.DAY_OF_MONTH);
        int horaAtual = cal.get(Calendar.HOUR);
        int minutoAtual = cal.get(Calendar.MINUTE);
        int segundoAtual = cal.get(Calendar.SECOND);
        int milissegundoAtual = cal.get(Calendar.MILLISECOND);
        String strData = anoAtual + "-" + mesAtual + "-" + diaAtual + " " + horaAtual + ":" + minutoAtual + ":" + segundoAtual + "." + milissegundoAtual;
        return strData;
	}
	
	public List<String> carregarLocacao() {
		prepararFilmes(); 
		return filmes;
	}

	
	private void prepararFilmes(){
		filmes = new ArrayList();
		int i = 1;
		List<Filme> listaFilmes = new FilmeController().buscarTodos();
		filmes.add(new SelectItem("0", "Selecione a Locação"));
		for (Filme filme : listaFilmes) {
			if(filme.getDisponivel().equals("NÃO")) {
				listaFilmesAlugados.add(filme);
				filmes.add(new SelectItem(i+"",filme.getNome()));
				i++;
			}
		}
	}
}
